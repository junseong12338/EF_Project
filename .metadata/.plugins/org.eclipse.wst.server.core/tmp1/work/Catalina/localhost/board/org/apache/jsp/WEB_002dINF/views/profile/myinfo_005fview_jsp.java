/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/9.0.85
 * Generated at: 2024-02-29 09:41:03 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.WEB_002dINF.views.profile;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class myinfo_005fview_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    if (!javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSP들은 오직 GET, POST 또는 HEAD 메소드만을 허용합니다. Jasper는 OPTIONS 메소드 또한 허용합니다.");
        return;
      }
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("<meta charset=\"utf-8\">\r\n");
      out.write("    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1, shrink-to-fit=no\">\r\n");
      out.write("    <title>Cyborg - Awesome HTML5 Template</title>\r\n");
      out.write("    \r\n");
      out.write("    <link href=\"resources/css/bootstrap.min.css\" rel=\"stylesheet\">\r\n");
      out.write("    <link rel=\"stylesheet\" href=\"resources/css/fontawesome.css\">\r\n");
      out.write("    <link rel=\"stylesheet\" href=\"resources/css/templatemo-cyborg-gaming.css\">\r\n");
      out.write("    <link rel=\"stylesheet\" href=\"resources/css/owl.css\">\r\n");
      out.write("    <link rel=\"stylesheet\" href=\"resources/css/animate.css\">\r\n");
      out.write("    <link rel=\"stylesheet\"href=\"https://unpkg.com/swiper@7/swiper-bundle.min.css\"/>\r\n");
      out.write("    <link href=\"https://fonts.googleapis.com/css2?family=Poppins:wght@100;200;300;400;500;600;700;800;900&display=swap\" rel=\"stylesheet\">\r\n");
      out.write("\r\n");
      out.write("    <style> \r\n");
      out.write(" input[type=\"text\"] {\r\n");
      out.write("            background-color: white; /* 투명 배경색 */\r\n");
      out.write("            border: 1px solid black; /* 테두리 설정 */\r\n");
      out.write("            border-radius: 5px; /* 테두리 둥글게 만듦 */\r\n");
      out.write("            padding: 5px; /* 입력 칸 내부 여백 */\r\n");
      out.write("            margin-bottom: 10px; /* 입력 칸 간격 조정 */\r\n");
      out.write("            color: black; /* 텍스트 색상을 흰색으로 설정 */\r\n");
      out.write("        }\r\n");
      out.write("\r\n");
      out.write("        #nickname{\r\n");
      out.write("          width: 25%; /* 사용자 이름 입력 칸 너비를 70%로 설정 */\r\n");
      out.write("        }\r\n");
      out.write("\r\n");
      out.write("        input[type=\"email\"] {\r\n");
      out.write("            background-color: white; /* 투명 배경색 */\r\n");
      out.write("            border: 1px solid black; /* 테두리 설정 */\r\n");
      out.write("            border-radius: 5px; /* 테두리 둥글게 만듦 */\r\n");
      out.write("            padding: 5px; /* 입력 칸 내부 여백 */\r\n");
      out.write("            margin-bottom: 10px; /* 입력 칸 간격 조정 */\r\n");
      out.write("            width: 30%; /* 이메일 주소 입력 칸 너비를 설정 */\r\n");
      out.write("            color: black; /* 텍스트 색상을 흰색으로 설정 */\r\n");
      out.write("            display: inline-block; /* 인라인 블록 요소로 변경 */\r\n");
      out.write("        }\r\n");
      out.write("        .shipping-address-1 {\r\n");
      out.write("            width:50%; \r\n");
      out.write("        }\r\n");
      out.write("\r\n");
      out.write("        .shipping-address-2 {\r\n");
      out.write("            width: 20%; \r\n");
      out.write("        }\r\n");
      out.write("        \r\n");
      out.write("    label{\r\n");
      out.write("        color: white;\r\n");
      out.write("    }\r\n");
      out.write("\r\n");
      out.write("    button[type=\"submit\"] {\r\n");
      out.write("            padding: 10px 20px;\r\n");
      out.write("            border: none;\r\n");
      out.write("            border-radius: 5px;\r\n");
      out.write("            background-color: #bb4ab1; padding: 5px 10px;\r\n");
      out.write("            color: #fff;\r\n");
      out.write("            font-size: 16px;\r\n");
      out.write("            cursor: pointer;\r\n");
      out.write("            margin-left: 5px;\r\n");
      out.write("            margin-top: 20px;\r\n");
      out.write("        }\r\n");
      out.write("\r\n");
      out.write("        button[type=\"submit\"]:hover {\r\n");
      out.write("            background-color: #a400b3;\r\n");
      out.write("            transition: background-color 0.5s;\r\n");
      out.write("        }\r\n");
      out.write("\r\n");
      out.write("        h2 {\r\n");
      out.write("            margin-bottom: 20px;\r\n");
      out.write("            color: white;\r\n");
      out.write("            display: inline-block;\r\n");
      out.write("        }\r\n");
      out.write("\r\n");
      out.write("        .section {\r\n");
      out.write("            margin-bottom: 30px;\r\n");
      out.write("        }\r\n");
      out.write("        \r\n");
      out.write("           /* 프로필 설정과 사용자 닉네임 간격 조정 */\r\n");
      out.write("      #profile-settings {\r\n");
      out.write("        margin-bottom: 40px; /* 프로필 설정과 다음 섹션 사이의 간격 설정 */\r\n");
      out.write("      }\r\n");
      out.write("      \r\n");
      out.write("        /* 결제 수단 방법과 간격 조정 */\r\n");
      out.write(" 	 #payment-settings {\r\n");
      out.write("  	  margin-bottom: 50px;\r\n");
      out.write(" 	 }\r\n");
      out.write("        \r\n");
      out.write("    </style>\r\n");
      out.write("\r\n");
      out.write("    \r\n");
      out.write("<meta charset=\"UTF-8\">\r\n");
      out.write("<title>Insert title here</title>\r\n");
      out.write("</head>\r\n");
      out.write("<body>\r\n");
      out.write("  \r\n");
      out.write("  <header class=\"header-area header-sticky\">\r\n");
      out.write("    <div class=\"container\">\r\n");
      out.write("        <div class=\"row\">\r\n");
      out.write("            <div class=\"col-12\">\r\n");
      out.write("                <nav class=\"main-nav\">\r\n");
      out.write("                    <a href=\"index.html\" class=\"logo\">\r\n");
      out.write("                        <img src=\"resources/images/logo.png\" alt=\"\">\r\n");
      out.write("                    </a>\r\n");
      out.write("                    <div class=\"search-input\">\r\n");
      out.write("                      <form id=\"search\" action=\"#\">\r\n");
      out.write("                        <input type=\"text\" placeholder=\"검색\" id='searchText' name=\"searchKeyword\" onkeypress=\"handle\" />\r\n");
      out.write("                        <i class=\"fa fa-search\"></i>\r\n");
      out.write("                      </form>\r\n");
      out.write("                    </div>\r\n");
      out.write("                    <ul class=\"nav\">\r\n");
      out.write("                        <li><a href=\"index.html\">Home</a></li>\r\n");
      out.write("                        <li><a href=\"browse.html\">Browse</a></li>\r\n");
      out.write("                        <li><a href=\"details.html\">Details</a></li>\r\n");
      out.write("                        <li><a href=\"streams.html\">Streams</a></li>\r\n");
      out.write("                        <li><a href=\"mypage_view\" class=\"active\">마이페이지 <img src=\"resources/images/profile-header.jpg\" alt=\"\"></a></li>\r\n");
      out.write("                    </ul>   \r\n");
      out.write("                    <a class='menu-trigger'>\r\n");
      out.write("                        <span>Menu</span>\r\n");
      out.write("                    </a>\r\n");
      out.write("                </nav>\r\n");
      out.write("            </div>\r\n");
      out.write("        </div>\r\n");
      out.write("    </div>\r\n");
      out.write("  </header>\r\n");
      out.write("  <div class=\"container\">\r\n");
      out.write("    <div class=\"row\">\r\n");
      out.write("      <div class=\"col-lg-12\">\r\n");
      out.write("        <div class=\"page-content\">\r\n");
      out.write("\r\n");
      out.write("            <div id=\"profile-settings\">\r\n");
      out.write("                <h2>프로필 설정</h2><br>\r\n");
      out.write("                <form>\r\n");
      out.write("                  <div class=\"form-group\">\r\n");
      out.write("                    <label for=\"username\">사용자 닉네임 </label>\r\n");
      out.write("                    <input type=\"text\" id=\"username\" name=\"username\" class=\"nickname\"><br><br>\r\n");
      out.write("                  </div>\r\n");
      out.write("                 <div class=\"form-group\">\r\n");
      out.write("                    <label for=\"email\">이메일 주소 </label>\r\n");
      out.write("                    <input type=\"email\" id=\"email\" name=\"email\" onblur=\"validateEmail(this)\">\r\n");
      out.write("					<div id=\"email-error\" style=\"color: red;\"></div>\r\n");
      out.write("                  </div>      \r\n");
      out.write("                </form>\r\n");
      out.write("            </div>\r\n");
      out.write("          		<!-- 배송지 설정 입력란 추가 -->\r\n");
      out.write("             <h2>주소 입력</h2><br><br>\r\n");
      out.write("            <input type=\"text\" id=\"sample4_postcode\" placeholder=\"우편번호\">\r\n");
      out.write("            <input type=\"button\" onclick=\"sample4_execDaumPostcode()\" value=\"우편번호 찾기\"><br>\r\n");
      out.write("            <input type=\"text\" id=\"sample4_roadAddress\" placeholder=\"도로명주소\">\r\n");
      out.write("            <input type=\"text\" id=\"sample4_detailAddress\" placeholder=\"상세주소\"><br>\r\n");
      out.write("            \r\n");
      out.write("            <button type=\"submit\">저장</button>\r\n");
      out.write("                <!-- 배송지 설정 입력란 추가 -->\r\n");
      out.write("                \r\n");
      out.write("            </div>\r\n");
      out.write("        </div>\r\n");
      out.write("    </div>\r\n");
      out.write("  </div>\r\n");
      out.write("  <footer>\r\n");
      out.write("    <div class=\"container\">\r\n");
      out.write("      <div class=\"row\">\r\n");
      out.write("        <div class=\"col-lg-12\">\r\n");
      out.write("          <p>Copyright © 2036 <a href=\"#\">Cyborg Gaming</a> Company. All rights reserved. \r\n");
      out.write("          \r\n");
      out.write("          <br>Design: <a href=\"https://templatemo.com\" target=\"_blank\" title=\"free CSS templates\">TemplateMo</a>  Distributed By <a href=\"https://themewagon.com\" target=\"_blank\" >ThemeWagon</a></p>\r\n");
      out.write("        </div>\r\n");
      out.write("      </div>\r\n");
      out.write("    </div>\r\n");
      out.write("  </footer>\r\n");
      out.write("\r\n");
      out.write("  <script src=\"resources/jquery/jquery.min.js\"></script>\r\n");
      out.write("  <script src=\"resources/js/bootstrap.min.js\"></script>\r\n");
      out.write("  <script src=\"resources/js/isotope.min.js\"></script>\r\n");
      out.write("  <script src=\"resources/js/owl-carousel.js\"></script>\r\n");
      out.write("  <script src=\"resources/js/tabs.js\"></script>\r\n");
      out.write("  <script src=\"resources/js/popup.js\"></script>\r\n");
      out.write("  <script src=\"resources/js/custom.js\"></script>\r\n");
      out.write("  <script src=\"//t1.daumcdn.net/mapjsapi/bundle/postcode/prod/postcode.v2.js\"></script>\r\n");
      out.write("\r\n");
      out.write("<script>\r\n");
      out.write("\r\n");
      out.write("//실시간으로 이메일 형식 유효성 검사\r\n");
      out.write("function validateEmail(input) {\r\n");
      out.write("    const email = input.value;\r\n");
      out.write("    const emailError = document.getElementById('email-error');\r\n");
      out.write("    const re = /\\S+@\\S+\\.\\S+/;\r\n");
      out.write("    if (!re.test(email)) {\r\n");
      out.write("        emailError.textContent = '올바른 이메일 주소를 입력하세요.';\r\n");
      out.write("    } else {\r\n");
      out.write("        emailError.textContent = '';\r\n");
      out.write("    }\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("// 전체 폼 데이터 검증, 이메일 주소 형식이 올바르지 않으면 DB로 전송 막음.\r\n");
      out.write("function validateForm() {\r\n");
      out.write("    const emailInput = document.getElementById('email');\r\n");
      out.write("    const emailError = document.getElementById('email-error');\r\n");
      out.write("\r\n");
      out.write("    // 이메일 주소 유효성 검사\r\n");
      out.write("    const re = /\\S+@\\S+\\.\\S+/;\r\n");
      out.write("    if (!re.test(emailInput.value)) {\r\n");
      out.write("        emailError.textContent = '올바른 이메일 주소를 입력하세요.';\r\n");
      out.write("        return false; // 폼 제출 방지\r\n");
      out.write("    } else {\r\n");
      out.write("        emailError.textContent = ''; // 에러 메시지 초기화\r\n");
      out.write("        return true; // 폼 제출 허용\r\n");
      out.write("    }\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("function sample4_execDaumPostcode() {\r\n");
      out.write("        new daum.Postcode({\r\n");
      out.write("            oncomplete: function(data) {\r\n");
      out.write("             \r\n");
      out.write("                var roadAddr = data.roadAddress; // 도로명 주소 변수\r\n");
      out.write("              /*   var extraRoadAddr = ''; */ // 참고 항목 변수\r\n");
      out.write("\r\n");
      out.write("       \r\n");
      out.write("                if(data.bname !== '' && /[동|로|가]$/g.test(data.bname)){\r\n");
      out.write("                  /*   extraRoadAddr += data.bname; */\r\n");
      out.write("                }\r\n");
      out.write("             \r\n");
      out.write("                if(data.buildingName !== '' && data.apartment === 'Y'){\r\n");
      out.write("                  /*  extraRoadAddr += (extraRoadAddr !== '' ? ', ' + data.buildingName : data.buildingName); */\r\n");
      out.write("                }\r\n");
      out.write("             \r\n");
      out.write("                /* if(extraRoadAddr !== ''){\r\n");
      out.write("                    extraRoadAddr = ' (' + extraRoadAddr + ')';\r\n");
      out.write("                } */\r\n");
      out.write("\r\n");
      out.write("                document.getElementById('sample4_postcode').value = data.zonecode;\r\n");
      out.write("                document.getElementById(\"sample4_roadAddress\").value = roadAddr;\r\n");
      out.write("              /*   document.getElementById(\"sample4_jibunAddress\").value = data.jibunAddress; */\r\n");
      out.write("                \r\n");
      out.write("                if(roadAddr !== ''){\r\n");
      out.write("              /*       document.getElementById(\"sample4_extraAddress\").value = extraRoadAddr; */\r\n");
      out.write("                } else {\r\n");
      out.write("                    document.getElementById(\"sample4_extraAddress\").value = '';\r\n");
      out.write("                }\r\n");
      out.write("\r\n");
      out.write("                var guideTextBox = document.getElementById(\"guide\");\r\n");
      out.write("\r\n");
      out.write("                if(data.autoRoadAddress) {\r\n");
      out.write("                /*     var expRoadAddr = data.autoRoadAddress + extraRoadAddr; */\r\n");
      out.write("                  /*   guideTextBox.innerHTML = '(예상 도로명 주소 : ' + expRoadAddr + ')'; */\r\n");
      out.write("                  /*   guideTextBox.style.display = 'block'; */\r\n");
      out.write("\r\n");
      out.write("                } else {\r\n");
      out.write("                   /*  guideTextBox.innerHTML = ''; */\r\n");
      out.write("                   /*  guideTextBox.style.display = 'none'; */\r\n");
      out.write("                }\r\n");
      out.write("            }\r\n");
      out.write("        }).open();\r\n");
      out.write("    }\r\n");
      out.write("\r\n");
      out.write("  </script>\r\n");
      out.write("\r\n");
      out.write("</body>\r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
