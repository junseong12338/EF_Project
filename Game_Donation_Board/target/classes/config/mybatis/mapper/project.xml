<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="project">
	<select id="select_idx" resultType="int">
		SELECT SEQ_EF_PROJECT_IDX.NEXTVAL
		FROM DUAL
	</select>

	<insert id="insert_project" parameterType="project">
		INSERT INTO EF_PROJECT VALUES(
			#{project_idx},
			#{user_idx},
			#{project_title},
			#{project_content},
			#{project_status},
			#{project_img},
			TO_DATE(#{project_start}, 'YYYY-MM-DD'),
			TO_DATE(#{project_end}, 'YYYY-MM-DD'),
			#{project_target}
		)
	</insert>
	
	<!-- 프로젝트 단일 셀렉트 -->
	<select id="selectOne_project" parameterType="int" resultType="project">
		SELECT * FROM EF_PROJECT
		WHERE PROJECT_IDX = #{idx}
	</select> 
	<insert id="insert_category" parameterType="categoryNum">
		INSERT INTO EF_CATEGORY VALUES(
			#{project_idx},
			#{category_num}
		)
	</insert>

	
	<!-- 리스트 총 개수 반환 -->
	<select id="project_count" resultType="int" parameterType="project">
		SELECT COUNT(AL.PROJECT_IDX)
			FROM (SELECT A.*, B.LIKE_COUNT, RANK() OVER (
								<!-- sort start --> 
								<choose>
									<when test="sort == 0">
										ORDER BY B.LIKE_COUNT DESC, A.PROJECT_IDX ASC
									</when>
									<when test="sort == 1">
										ORDER BY A.PROJECT_IDX ASC
									</when>
									<when test="sort == 2">
										ORDER BY C.PROJECT_DONATION DESC, A.PROJECT_IDX ASC
									</when>
								</choose>
								<!-- sort end -->
								 ) AS "RANK_NO" , C.PROJECT_DONATION
					FROM EF_PROJECT A,	( SELECT P.PROJECT_IDX, COUNT ( L.PROJECT_IDX ) AS "LIKE_COUNT"
										FROM EF_PROJECT P LEFT JOIN EF_LIKE L 
										ON P.PROJECT_IDX = L.PROJECT_IDX
										GROUP BY P.PROJECT_IDX ) B ,	( SELECT P.PROJECT_IDX, SUM ( D.DONATION_MONEY ) AS "PROJECT_DONATION"
																		FROM EF_PROJECT P LEFT OUTER JOIN EF_DONATION D
																		ON P.PROJECT_IDX = D.PROJECT_IDX
																		GROUP BY P.PROJECT_IDX ) C

			WHERE A.PROJECT_IDX = B.PROJECT_IDX
				AND A.PROJECT_IDX = C.PROJECT_IDX
		
				<!-- 반복 foreach start -->
				<if test="category_list != null">
					<foreach collection="category_list" item="c">
					AND A.PROJECT_IDX IN ( SELECT PROJECT_IDX
							FROM EF_CATEGORY
							WHERE CATEGORY_IDX = #{c} )
					</foreach>
				</if>
				<!-- 반복 foreach end -->
				) AL
				
			WHERE AL.RANK_NO BETWEEN #{start} AND #{end} 
				AND AL.PROJECT_STATUS = 1
				
				<!-- choose 기간 start -->
				<choose>
					<when test="sort_date == 1">
						AND AL.PROJECT_START <![CDATA[<]]> SYSDATE AND AL.PROJECT_END <![CDATA[>]]> SYSDATE
					</when>
					<when test="sort_date == 2">
						AND AL.PROJECT_START <![CDATA[<]]> SYSDATE
					</when>
					<when test="sort_date == 3">
						AND AL.PROJECT_END <![CDATA[<]]> SYSDATE
					</when>
				</choose>
				<!-- choose 기간 end -->
	</select>


	<!-- 프로젝트 리스트 가져오기 -->
	<select id="project_list" resultType="project" parameterType="project">
		SELECT AL.*
			FROM (SELECT A.*, B.LIKE_COUNT, RANK() OVER (
								<!-- sort start --> 
								<choose>
									<when test="sort == 0">
										ORDER BY B.LIKE_COUNT DESC, A.PROJECT_IDX ASC
									</when>
									<when test="sort == 1">
										ORDER BY A.PROJECT_IDX ASC
									</when>
									<when test="sort == 2">
										ORDER BY C.PROJECT_DONATION DESC, A.PROJECT_IDX ASC
									</when>
								</choose>
								<!-- sort end -->
								 ) AS "RANK_NO" , C.PROJECT_DONATION
					FROM EF_PROJECT A,	( SELECT P.PROJECT_IDX, COUNT ( L.PROJECT_IDX ) AS "LIKE_COUNT"
										FROM EF_PROJECT P LEFT JOIN EF_LIKE L 
										ON P.PROJECT_IDX = L.PROJECT_IDX
										GROUP BY P.PROJECT_IDX ) B ,	( SELECT P.PROJECT_IDX, SUM ( D.DONATION_MONEY ) AS "PROJECT_DONATION"
																		FROM EF_PROJECT P LEFT OUTER JOIN EF_DONATION D
																		ON P.PROJECT_IDX = D.PROJECT_IDX
																		GROUP BY P.PROJECT_IDX ) C

			WHERE A.PROJECT_IDX = B.PROJECT_IDX
				AND A.PROJECT_IDX = C.PROJECT_IDX
		
				<!-- 반복 foreach start -->
				<if test="category_list != null">
					<foreach collection="category_list" item="c">
					AND A.PROJECT_IDX IN ( SELECT PROJECT_IDX
							FROM EF_CATEGORY
							WHERE CATEGORY_IDX = #{c} )
					</foreach>
				</if>
				<!-- 반복 foreach end -->
				) AL
				
			WHERE AL.RANK_NO BETWEEN #{start} AND #{end} 
				AND AL.PROJECT_STATUS = 1
				
				<!-- choose 기간 start -->
				<choose>
					<when test="sort_date == 1">
						AND AL.PROJECT_START <![CDATA[<]]> SYSDATE AND AL.PROJECT_END <![CDATA[>]]> SYSDATE
					</when>
					<when test="sort_date == 2">
						AND AL.PROJECT_START <![CDATA[<]]> SYSDATE
					</when>
					<when test="sort_date == 3">
						AND AL.PROJECT_END <![CDATA[<]]> SYSDATE
					</when>
				</choose>
				<!-- choose 기간 end -->
	</select>	
	
	<!-- 유저번호로 검색한 프로젝트 리스트 -->
		<select id="userIdx_list" resultType="project">
		SELECT * 
		FROM EF_PROJECT
	</select>
</mapper>












